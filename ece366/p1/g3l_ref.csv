Instruction,Argument,Description,Encoding (5-bit),Section
6set0000,,Set $r6 to 0b000000000000,11000,11xxx - Setting + Halt
6set0111,,Set $r6 to 0b000000000111,11001,11xxx - Setting + Halt
7set0110,,Set $r7 to 0b000000000110,11010,11xxx - Setting + Halt
7set0101,,Set $r7 to 0b000000000101,11011,11xxx - Setting + Halt
7set0011,,Set $r7 to 0b000000000011,11100,11xxx - Setting + Halt
7set0010,,Set $r7 to 0b000000000010,11101,11xxx - Setting + Halt
7set0001,,Set $r7 to 0b000000000001,11110,11xxx - Setting + Halt
halt,,Halt,11111,11xxx - Setting + Halt
neginf,$rlox,Set low register ($rlox is element of $r0-$r3) to lowest number,000xx,000xx - Special Set to Negative Infinity
incr6,,Increment $r6,00100,0010x - Incrementing
decr5,,Decrement $r5,00101,0010x - Incrementing
8decr6,,Decrement $r8 by 6,00110,00110 - Special Increment
lt6hi4,,Load tribble pointed to by $r6 to $r4,01000,0100x - Load to Memory
lt6hi5,,Load tribble pointed to by $r6 to $r5,01001,0100x - Load to Memory
st37,,Store $r3 to memory pointed to by $r7,01010,01010 - Special Store to Memory
swp36,,Swap registers $r3 and $r6,10000,10000 - Special Register Swap
sub37,,"Subtract $r4 from $r3, store in $r3",10001,10001 - Special Subtract
b5nzj7,,Branch if $r5 != 0 to PC-$r7,01100,011xx - Branching
b34neqj7,,Branch if $r3 != $r7 to PC-$r7,01101,011xx - Branching
b34gtejf7,,Branch if $r3 <= $r4 to PC+$r7,01110,011xx - Branching
j2,,Jump two instructions backwards (PC-2),01111,011xx - Branching